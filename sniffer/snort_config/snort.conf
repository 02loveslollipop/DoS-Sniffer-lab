# Snort 2.x Configuration for DoS Detection (adapted from VRT example)

###################################################
# Step #1: Set the network variables.
###################################################
ipvar HOME_NET any
ipvar EXTERNAL_NET any

# Variables for server addresses (can be left as $HOME_NET if not specific)
ipvar DNS_SERVERS $HOME_NET
ipvar SMTP_SERVERS $HOME_NET
ipvar HTTP_SERVERS $HOME_NET
ipvar SQL_SERVERS $HOME_NET
ipvar TELNET_SERVERS $HOME_NET
ipvar SSH_SERVERS $HOME_NET
ipvar FTP_SERVERS $HOME_NET
ipvar SIP_SERVERS $HOME_NET

# Port variables
# Simplified for this setup
portvar HTTP_PORTS [80,8080]
portvar SHELLCODE_PORTS !80
portvar ORACLE_PORTS 1024:
portvar SSH_PORTS 22
portvar FTP_PORTS [21,2100,3535]
portvar SIP_PORTS [5060,5061,5600]
portvar FILE_DATA_PORTS [$HTTP_PORTS,110,143]

# Paths
var RULE_PATH /etc/snort/rules
var PREPROC_RULE_PATH /etc/snort
# var SO_RULE_PATH /etc/snort/so_rules # Not using shared object rules for this
var WHITE_LIST_PATH /etc/snort/rules
var BLACK_LIST_PATH /etc/snort/rules

###################################################
# Step #2: Configure the decoder.
###################################################
config disable_decode_alerts
config disable_tcpopt_experimental_alerts
config disable_tcpopt_obsolete_alerts
config disable_tcpopt_ttcp_alerts
config disable_tcpopt_alerts
config disable_ipopt_alerts
config checksum_mode: all
# config flowbits_size: 64
config logdir: /var/log/snort

###################################################
# Step #3: Configure the base detection engine.
###################################################
config pcre_match_limit: 3500
config pcre_match_limit_recursion: 1500
config detection: search-method ac-split search-optimize max-pattern-len 20
config event_queue: max_queue 8 log 5 order_events content_length
config paf_max: 16000

###################################################
# Step #4: Configure dynamic loaded libraries.
###################################################
# dynamicpreprocessor directory /usr/lib/snort_dynamicpreprocessor
# dynamicengine /usr/lib/snort_dynamicengine/sf_engine.so
# dynamicdetection directory /usr/local/lib/snort_dynamicrules # Not using dynamic rules libraries for this

###################################################
# Step #5: Configure preprocessors
###################################################

# Target-based IP defragmentation.
preprocessor frag3_global: max_frags 65536, policy linux
preprocessor frag3_engine: policy linux, detect_anomalies # policy linux is in global

# Target-Based stateful inspection/stream reassembly.
preprocessor stream5_global: track_tcp yes, \
   track_udp yes, \
   track_icmp no, \
   max_tcp 262144, \
   max_udp 131072, \
   policy linux
preprocessor stream5_tcp: detect_anomalies, require_3whs 0 # require_3whs 0 to process traffic without full handshake (useful for some attacks)
# preprocessor stream5_udp: # Default settings usually fine

# HTTP normalization and anomaly detection (minimal, can be commented out if not needed)
# preprocessor http_inspect: global iis_unicode_map unicode.map 1252 compress_depth 65535 decompress_depth 65535
# preprocessor http_inspect_server: server default \
#    ports { 80 8080 } \
#    server_flow_depth 0 \
#    client_flow_depth 0 \
#    post_depth 65495

# Portscan detection.
preprocessor sfportscan: proto { all } memcap { 10000000 } sense_level { low } logfile { portscan.log } # Added logfile for portscan events

# Commenting out other preprocessors not strictly needed for basic DoS detection
# preprocessor ftp_telnet: global inspection_type stateful
# preprocessor smtp: ports { 25 465 587 }
# preprocessor ssh: server_ports { 22 }
# preprocessor dcerpc2: memcap 102400
# preprocessor dns: ports { 53 }
# preprocessor ssl: ports { 443 }

# Reputation preprocessor (requires white.list and black.list files)
# preprocessor reputation: \
#   memcap 500, \
#   priority whitelist, \
#   nested_ip inner, \
#   whitelist $WHITE_LIST_PATH/white.list, \
#   blacklist $BLACK_LIST_PATH/black.list

###################################################
# Step #6: Configure output plugins
###################################################

# Output alerts to console for Docker logs and fast alert format
output alert_fast: /var/log/snort/alert
# output alert_unified2: filename snort.alert, limit 128, nostamp # Alternative for unified2 alerting
# output log_unified2: filename snort.log, limit 128, nostamp     # Alternative for unified2 logging

###################################################
# Step #7: Customize your rule set
###################################################

# Standard Snort config files (should be in /etc/snort/ or provided by base image)
# Ensure these files exist in the container at this path or adjust as needed.
# The linton/docker-snort image should provide these.
include /etc/snort/classification.config
include /etc/snort/reference.config

# Custom rules for DoS attacks
include $RULE_PATH/local.rules

# Comment out all other VRT/community rule files to keep it focused
# include $RULE_PATH/local.rules
# include $RULE_PATH/app-detect.rules
# include $RULE_PATH/attack-responses.rules
# ... (many other rule files from the example are omitted here for brevity and focus)
# include $RULE_PATH/dos.rules # We are using custom.rules for DoS
# include $RULE_PATH/scan.rules # sfportscan preprocessor handles basic scan detection

###################################################
# Step #8: Customize your preprocessor and decoder alerts
###################################################

# These files should exist in $PREPROC_RULE_PATH or be provided by the base image.
# The linton/docker-snort image should provide these.
include $PREPROC_RULE_PATH/preprocessor.rules
include $PREPROC_RULE_PATH/decoder.rules
# include $PREPROC_RULE_PATH/sensitive-data.rules # Optional

###################################################
# Step #9: Customize your Shared Object Snort Rules
###################################################
# Not using shared object rules for this setup.
# include $SO_RULE_PATH/bad-traffic.rules
# ... (all SO rules commented out)

###################################################
# Event thresholding or suppression commands.
###################################################
# include /etc/snort/threshold.conf # Optional, ensure threshold.conf exists if uncommented
                                   # The linton/docker-snort image might provide a default one.
